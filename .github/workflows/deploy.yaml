name: Deployment Pipeline
on:
    push:
        branches:
            - main
        tags:
            - "*"
    pull_request:
        branches:
            - dev
    release:
        types:
            - created
    workflow_dispatch:

jobs:
    deploy-to-dev:
        runs-on: ubuntu-latest
        if: github.ref != 'refs/heads/main'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Set Short SHA as an environment variable
              run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

            - name: Build and push Docker image
              run: |
                  docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
                  docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                  docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
                  docker push ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

            - name: Copy config and docker-compose to EC2
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  source: "deploy/"
                  target: "/home/${{ EC2_USERNAME }}/app"

            - name: SSH into EC2 instance and deploy
              uses: appleboy/ssh-action@v1.0.3
              env:
                  DOCKER_ID: ${{ secrets.DOCKER_ID }}
                  IMAGE_TAG: ${{ env.IMAGE_TAG }}
                  CONFIG_FILE: "/home/${{ EC2_USERNAME }}/app/deploy/dev/.env.dev"
                  DOCKER_COMPOSE_PATH: "/home/${{ EC2_USERNAME }}/app/deploy/dev/docker-compose.yaml"
                  secrets.DOCKER_IMAGE_NAME: ${{ secrets.secrets.DOCKER_IMAGE_NAME }}
                  DB_POSTGRES_PASSWORD: ${{ secrets.DEV_DB_POSTGRES_PASSWORD }}
                  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
                  DATABASE_URL: "mysql://root:password@mysql-job-nest:3306/job-nest-test"
                  AWS_BUCKET_NAME:  ${{ secrets.AWS_BUCKET_NAME }}
                  AWS_BUCKET_REGION: ${{ secrets.AWS_BUCKET_REGION }}
                  AWS_ACCESS_KEY:  ${{ secrets.AWS_ACCESS_KEY }}
                  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_SSH_KEY }}
                  envs: DOCKER_ID,IMAGE_TAG,CONFIG_FILE,DOCKER_COMPOSE_PATH,secrets.DOCKER_IMAGE_NAME,DATABASE_PASSWORD
                  script_stop: true
                  script: |
                      echo $IMAGE_TAG
                      echo $DOCKER_COMPOSE_PATH
                      echo $CONFIG_FILE
                      sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
                      docker compose -f $DOCKER_COMPOSE_PATH down -v
                      docker compose -f $DOCKER_COMPOSE_PATH up -d